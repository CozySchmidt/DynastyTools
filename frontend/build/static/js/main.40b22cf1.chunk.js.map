{"version":3,"sources":["components/votebutton/votebutton.js","materialstyles/buttongroupbox.js","materialstyles/customtogglebutton.js","materialstyles/customtogglebuttongroup.js","components/vote/vote.js","constants/api-urls.js","components/rankings/rankings.js","components/calculator/calculator.js","components/tabs/tabs.js","App.js","reportWebVitals.js","index.js"],"names":["VoteButton","props","onAnimationEnd","console","log","state","playerData","setState","animate","player","prevProps","this","ButtonBase","className","Team","onClick","Slide","direction","in","onExited","timeout","enter","exit","Typography","variant","Name","Component","ButtonGroupBox","withStyles","theme","root","backgroundColor","color","palette","common","white","boxShadow","display","alignItems","flexWrap","borderBottom","borderRadius","padding","spacing","Box","CustomToggleButton","primary","dark","border","margin","secondary","main","marginLeft","borderLeft","darken","shape","ToggleButton","CustomToggleButtonGroup","justifyContent","width","ToggleButtonGroup","Vote","nextMatchUp","error","response","axios","get","NEXT_MATCHUP","position","headers","CSRF_TOKEN","then","res","catch","err","isUnmounted","submitting","updatePosition","event","value","winner","data","Winner","post","message","id","size","onChange","exclusive","POSITIONS","map","pos","SCORING","scoring","PlayerOne","submitVote","PlayerTwo","CircularProgress","getInnerContents","document","cookie","split","find","row","startsWith","CustomTableCell","head","light","body","TableCell","CustomTableContainer","TableContainer","Rankings","getRankings","GET_RANKINGS","tableData","teams","filteredTeams","Table","TableHead","TableRow","TableBody","i","Position","Math","round","Rating","floor","Age","Birthdate","Draftyear","Calculator","HIDDEN","Nav","handleChange","newValue","AppBar","elevation","Toolbar","Tabs","Tab","label","role","hidden","defaults","xsrfCookieName","xsrfHeaderName","createMuiTheme","typography","useNextVariants","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.40b22cf1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Person from '@material-ui/icons/Person';\r\nimport ThumbUp from '@material-ui/icons/ThumbUp';\r\nimport './votebutton.scss';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nclass VoteButton extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            playerData: this.props.player,\r\n            animate: false\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        console.log(this.state.playerData);\r\n        if (prevProps.player !== this.props.player) {\r\n            this.setState({animate: true})\r\n        }\r\n    }\r\n\r\n    onAnimationEnd = () => {\r\n        console.log(this.state.playerData);\r\n        this.setState({animate: false, playerData: this.props.player})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ButtonBase \r\n                className={`vote-button-container ${this.state.playerData.Team}`}\r\n                onClick={this.state.animate ? null : this.props.onClick}\r\n            >\r\n                <Slide \r\n                    direction={this.state.animate ? \"up\" : \"down\"}\r\n                    in={!this.state.animate} \r\n                    onExited={this.onAnimationEnd}\r\n                    timeout={{enter: 400, exit: 300}}\r\n                >\r\n                    <div className={`vote-button-contents`}>\r\n                        <Typography className={`player-name`} variant=\"h6\">{this.state.playerData.Name ? this.state.playerData.Name : 'Name Unkown'}</Typography>\r\n                        <Typography className={`player-team`} variant=\"subtitle1\">{this.state.playerData.Team ? this.state.playerData.Team : 'Team Unkown'}</Typography>\r\n                        <div className=\"player-pic-wrapper\">\r\n                            <Person className=\"player-pic\"></Person>\r\n                        </div>\r\n                        <div className={`thumb-icon-wrapper`}>\r\n                            <ThumbUp className=\"thumb-icon\"></ThumbUp>\r\n                        </div>\r\n                    </div>\r\n                </Slide>\r\n            </ButtonBase>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VoteButton;","import Box from '@material-ui/core/Box';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nexport const ButtonGroupBox = withStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: 'transparent',\r\n        color: theme.palette.common.white,\r\n        boxShadow: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexWrap: 'wrap',\r\n        borderBottom: `1px solid ${theme.palette.common.white}`,\r\n        borderRadius: '0px',\r\n        padding: theme.spacing(0.5),\r\n\r\n        \"& .MuiFormLabel-root\": {\r\n            color: theme.palette.common.white\r\n        },\r\n\r\n        \"& .MuiToggleButtonGroup-root\": {\r\n            padding: `${theme.spacing(0.5)}px`\r\n        }\r\n    }\r\n}))(Box)","import ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport { darken } from '@material-ui/core/styles';\r\n\r\nexport const CustomToggleButton = withStyles((theme) =>  ({\r\n    root: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n        color: theme.palette.common.white,\r\n        border: 'none',\r\n        padding: `${theme.spacing(0.5)}px ${theme.spacing(1)}px`,\r\n        margin: theme.spacing(0.5),\r\n        \"&&.Mui-selected\": {\r\n            backgroundColor: theme.palette.secondary.dark,\r\n            color: theme.palette.common.white,\r\n            boxShadow: `0 0 8px ${theme.palette.secondary.main}`\r\n        },\r\n        \"&&.Mui-selected + &.Mui-selected\": {\r\n            marginLeft: theme.spacing(0.5),\r\n            borderLeft: '1px solid transparent'\r\n        },\r\n        \"&&:hover\": {\r\n            backgroundColor: darken(theme.palette.secondary.dark, 0.15),\r\n            color: theme.palette.common.white,\r\n            boxShadow: `0 0 8px ${theme.palette.secondary.dark}`\r\n        },\r\n        '&&.MuiToggleButtonGroup-groupedHorizontal:not(:first-child)': {\r\n            borderRadius: theme.shape.borderRadius,\r\n            marginLeft: theme.spacing(0.5)\r\n        },\r\n        '&&.MuiToggleButtonGroup-groupedHorizontal:first-child': {\r\n            borderRadius: theme.shape.borderRadius\r\n        }\r\n    },\r\n    \r\n}))(ToggleButton);","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup'\r\n\r\nexport const CustomToggleButtonGroup = withStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'flex-start',\r\n        width: '100%'\r\n    }\r\n}))(ToggleButtonGroup)","import './vote.scss';\r\nimport React, { Component } from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport axios from 'axios';\r\nimport { NEXT_MATCHUP, INSERT_MATCHUP } from '../../constants/api-urls';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport VoteButton from '../votebutton/votebutton';\r\nimport { ButtonGroupBox } from '../../materialstyles/buttongroupbox';\r\nimport { CustomToggleButton } from '../../materialstyles/customtogglebutton';\r\nimport { CustomToggleButtonGroup } from '../../materialstyles/customtogglebuttongroup';\r\n\r\nclass Vote extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            response: null,\r\n            submitting: false,\r\n            position: \"QB\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.nextMatchUp();\r\n    }\r\n\r\n    nextMatchUp = () => {\r\n        let error, response;\r\n        axios.get(NEXT_MATCHUP+'?position='+this.state.position, {headers:{\"X-CSRFToken\": CSRF_TOKEN}}).then(res => {\r\n            response = res;\r\n            console.log(response);\r\n        }).catch(err => {\r\n            error = err;\r\n        }).then(() => {\r\n            if (this.isUnmounted) return;\r\n            this.setState({error: error, response: response, submitting: false});\r\n        })\r\n    }\r\n\r\n    submitVote(winner) {\r\n        if (this.state.submitting) return;\r\n\r\n        let data = this.state.response.data;\r\n        data.Winner = winner;\r\n        console.log(data);\r\n        this.setState({submitting: true});\r\n        \r\n        axios.post(INSERT_MATCHUP, data, {headers:{\"X-CSRFToken\": CSRF_TOKEN}}).then(() => {\r\n            this.nextMatchUp();\r\n        }).catch(err => {\r\n            console.log(err.message)\r\n        })\r\n    }\r\n\r\n    updatePosition = (event, value) => {\r\n        if (!value) return;\r\n\r\n        this.setState({position: value}, () => {\r\n            this.nextMatchUp();\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.isUnmounted = true;\r\n    }\r\n\r\n    /**\r\n     * Returns the inner html for the vote container depending on the current state\r\n     * \r\n     * @returns \r\n     */\r\n    getInnerContents() {\r\n        if (this.state.error) {\r\n            return (\r\n                <Typography variant=\"h5\">\r\n                    Error: {this.state.error.message}\r\n                </Typography>\r\n            );\r\n        } else if (this.state.response) {\r\n            return (\r\n                <div id=\"matchup-container\">\r\n                    <div id=\"vote-options\">\r\n                        <ButtonGroupBox className=\"vote-option\">\r\n                            <Typography variant=\"body1\">Position</Typography>\r\n                            <CustomToggleButtonGroup \r\n                                size=\"medium\"\r\n                                value={this.state.position}\r\n                                aria-label=\"Select Position\"\r\n                                onChange={this.updatePosition}\r\n                                exclusive \r\n                            >\r\n                                {POSITIONS.map((pos) => (\r\n                                    <CustomToggleButton value={pos} key={pos} aria-label={pos + \" selector button\"}>\r\n                                        <Typography variant=\"body2\">{pos}</Typography>\r\n                                    </CustomToggleButton>\r\n                                ))}\r\n                            </CustomToggleButtonGroup>\r\n                        </ButtonGroupBox>\r\n\r\n                        <ButtonGroupBox className=\"vote-option\">\r\n                            <Typography variant=\"body1\">Scoring</Typography>\r\n                            <CustomToggleButtonGroup \r\n                                size=\"medium\"\r\n                                value={this.state.position}\r\n                                aria-label=\"Select Scoring Type\"\r\n                                exclusive \r\n                            >\r\n                                {SCORING.map((scoring) => (\r\n                                    <CustomToggleButton value={scoring} key={scoring} aria-label={scoring + \" selector button\"}>\r\n                                        <Typography variant=\"body2\">{scoring}</Typography>\r\n                                    </CustomToggleButton>\r\n                                ))}\r\n                            </CustomToggleButtonGroup>\r\n                        </ButtonGroupBox>\r\n                    </div>\r\n                    <div id=\"vote-button-container\">\r\n                        <div className=\"vote-button\" >\r\n                            <VoteButton \r\n                                player={this.state.response.data.PlayerOne}\r\n                                onClick={() => this.submitVote(this.state.response.data.PlayerOne)}\r\n                            >\r\n                            </VoteButton>\r\n                        </div>\r\n                        <div className=\"vote-button\">\r\n                            <VoteButton \r\n                                player={this.state.response.data.PlayerTwo}\r\n                                onClick={() => this.submitVote(this.state.response.data.PlayerTwo)}\r\n                            >\r\n                            </VoteButton>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n        }\r\n\r\n        return (\r\n            <div id=\"matchup-loader\">\r\n                <CircularProgress className=\"loading-bar\" color=\"secondary\"/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let view = (\r\n            <div id=\"vote-container\">\r\n                {this.getInnerContents()}\r\n            </div>\r\n        );\r\n\r\n        return view;\r\n    }\r\n}\r\n\r\nconst CSRF_TOKEN = document.cookie ? document.cookie.split('; ').find(row => row.startsWith('csrftoken=')).split('=')[1] : null;\r\n\r\nconst SCORING = ['Std', 'Half-PPR', 'PPR'];\r\n\r\nconst POSITIONS = ['QB', 'RB', 'WR', 'TE'];\r\n\r\nexport default Vote;","export const NEXT_MATCHUP = '/api/matchups/';\r\nexport const INSERT_MATCHUP = '/api/matchups/';\r\nexport const GET_RANKINGS = '/api/players/';","import './rankings.scss';\r\nimport React, { Component } from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport axios from 'axios';\r\nimport { GET_RANKINGS } from '../../constants/api-urls';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport { ButtonGroupBox } from '../../materialstyles/buttongroupbox';\r\nimport { CustomToggleButton } from '../../materialstyles/customtogglebutton';\r\nimport { CustomToggleButtonGroup } from '../../materialstyles/customtogglebuttongroup';\r\n\r\nconst CustomTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.primary.light,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        backgroundColor: theme.palette.primary.light,\r\n        color: theme.palette.common.white,\r\n    },\r\n    root: {\r\n        borderBottom: '1px solid rgba(255, 255, 255, 0.2)'\r\n    },\r\n}))(TableCell);\r\n\r\nconst CustomTableContainer = withStyles((theme) => ({\r\n    root: {\r\n        boxShadow: '0 0 5px rgba(0, 0, 0, 0.25)'\r\n    }\r\n}))(TableContainer)\r\n\r\nclass Rankings extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            position: \"All\",\r\n            tableData: null,\r\n            teams: [],\r\n            filteredTeams: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getRankings();\r\n    }\r\n\r\n    getRankings = () => {\r\n        axios.get(GET_RANKINGS+\"?position=\"+this.state.position).then(res => {\r\n            this.tableData = this.setState({tableData: res.data});\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    updatePosition = (event, value) => {\r\n        if (!value) return;\r\n\r\n        this.setState({position: value}, () => {\r\n            this.getRankings();\r\n        });\r\n    }\r\n\r\n\r\n\r\n    componentWillUnmount() {\r\n        this.isUnmounted = true;\r\n    }\r\n\r\n    /**\r\n     * Returns the inner html for the vote container depending on the current state\r\n     * \r\n     * @returns \r\n     */\r\n    getInnerContents() {\r\n        if (this.state.error) {\r\n            return (\r\n                <Typography variant=\"h5\">\r\n                    Error: {this.state.error.message}\r\n                </Typography>\r\n            );\r\n        } else if (this.state.tableData) {\r\n            return (\r\n                <div id=\"ranking-wrapper\">\r\n                    <div id=\"ranking-filters\">\r\n\r\n                        <ButtonGroupBox className=\"ranking-filter\">\r\n                            <Typography variant=\"body1\">Position</Typography>\r\n                            <CustomToggleButtonGroup \r\n                                size=\"medium\"\r\n                                value={this.state.position}\r\n                                aria-label=\"Select Position\"\r\n                                onChange={this.updatePosition}\r\n                                exclusive \r\n                            >\r\n                                {POSITIONS.map((pos) => (\r\n                                    <CustomToggleButton value={pos} key={pos} aria-label={pos + \" selector button\"}>\r\n                                        <Typography variant=\"body2\">{pos}</Typography>\r\n                                    </CustomToggleButton>\r\n                                ))}\r\n                            </CustomToggleButtonGroup>\r\n                        </ButtonGroupBox>\r\n\r\n                    </div>\r\n                    <CustomTableContainer className=\"rankings-table\">\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <CustomTableCell><Typography variant=\"subtitle1\">#</Typography></CustomTableCell>\r\n                                    <CustomTableCell><Typography variant=\"subtitle1\">Name</Typography></CustomTableCell>\r\n                                    <CustomTableCell><Typography variant=\"subtitle1\">Team</Typography></CustomTableCell>\r\n                                    <CustomTableCell><Typography variant=\"subtitle1\">Position</Typography></CustomTableCell>\r\n                                    <CustomTableCell><Typography variant=\"subtitle1\">Rating</Typography></CustomTableCell>\r\n                                    <CustomTableCell><Typography variant=\"subtitle1\">Age</Typography></CustomTableCell>\r\n                                    <CustomTableCell><Typography variant=\"subtitle1\">Birthdate</Typography></CustomTableCell>\r\n                                    <CustomTableCell><Typography variant=\"subtitle1\">Draft Year</Typography></CustomTableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {this.state.tableData.map((row, i) => {\r\n                                    i++;\r\n                                    return (\r\n                                        <TableRow key={row.Name}>\r\n                                            <CustomTableCell>{i+'.'}</CustomTableCell>\r\n                                            <CustomTableCell>{row.Name}</CustomTableCell>\r\n                                            <CustomTableCell>{row.Team}</CustomTableCell>\r\n                                            <CustomTableCell>{row.Position}</CustomTableCell>\r\n                                            <CustomTableCell>{Math.round(row.Rating)}</CustomTableCell>\r\n                                            <CustomTableCell>{Math.floor(row.Age)}</CustomTableCell>\r\n                                            <CustomTableCell>{row.Birthdate}</CustomTableCell>\r\n                                            <CustomTableCell>{row.Draftyear}</CustomTableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                })}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </CustomTableContainer>\r\n                    \r\n                </div>\r\n            );\r\n\r\n        }\r\n\r\n        return (\r\n            <div id=\"matchup-loader\">\r\n                <CircularProgress className=\"loading-bar\" color=\"secondary\"/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let view = (\r\n            <div id=\"rankings-container\">\r\n                {this.getInnerContents()}\r\n            </div>\r\n        );\r\n\r\n        return view;\r\n    }\r\n}\r\n\r\nconst CSRF_TOKEN = document.cookie ? document.cookie.split('; ').find(row => row.startsWith('csrftoken=')).split('=')[1] : null;\r\n\r\nconst SCORING = ['Std', 'Half-PPR', 'PPR'];\r\n\r\nconst POSITIONS = ['All', 'QB', 'RB', 'WR', 'TE'];\r\n\r\nexport default Rankings;","import React, { Component } from \"react\";\r\n\r\nclass Calculator extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calculator;","import React, { Component } from \"react\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { Toolbar, Typography } from \"@material-ui/core\";\r\nimport './tabs.scss';\r\nimport Vote from '../vote/vote';\r\nimport Rankings from \"../rankings/rankings\";\r\nimport Calculator from \"../calculator/calculator\";\r\n\r\nexport const HIDDEN = {\r\n    VOTE: 0,\r\n    RANKINGS: 1,\r\n    CALCULATOR: 2\r\n}\r\n\r\nclass Nav extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: 0\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div id=\"mat-tabs\">\r\n                <AppBar position=\"static\" elevation={0}>\r\n                    <Toolbar id=\"tabs-toolbar\">\r\n                        <Tabs \r\n                            value={this.state.value} \r\n                            onChange={this.handleChange} \r\n                            aria-label=\"page tabs\"\r\n                            id=\"tabs\"\r\n                        >\r\n                            <Tab label=\"Vote\" />\r\n                            <Tab label=\"Rankings\" />\r\n                            <Tab label=\"Calculator\" />\r\n                        </Tabs>\r\n                        <Typography id=\"tabs-heading\" variant=\"h5\">\r\n                            Consensus Rankings\r\n                        </Typography>\r\n                    </Toolbar>\r\n                \r\n                </AppBar>\r\n                <div role=\"tabpanel\" className=\"tab-panel\" hidden={this.state.value !== HIDDEN.VOTE}>\r\n                    <Vote></Vote>\r\n                </div>\r\n                \r\n                <div role=\"tabpanel\" className=\"tab-panel\"  hidden={this.state.value !== HIDDEN.RANKINGS}>\r\n                    <Rankings></Rankings>\r\n                </div> \r\n\r\n                <div role=\"tabpanel\" className=\"tab-panel\"  hidden={this.state.value !== HIDDEN.CALCULATOR}>\r\n                    <Calculator></Calculator>\r\n                </div> \r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleChange = (event, newValue) => {\r\n        this.setState({value: newValue})\r\n    }\r\n}\r\n\r\nexport default Nav;","import React, { Component } from \"react\";\r\nimport { MuiThemeProvider, unstable_createMuiStrictModeTheme as createMuiTheme } from '@material-ui/core/styles';  \r\nimport Nav from './components/tabs/tabs'\r\nimport './App.css';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.xsrfCookieName = 'csrftoken'\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n       main: '#1b2d3a',\r\n    },\r\n    secondary: {\r\n      main: '#69BCFF',\r\n      },\r\n    },\r\n    typography: { \r\n        useNextVariants: true\r\n    }\r\n})\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme = { theme }>\r\n        <Nav />\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}